name: keyed cosign @ttl.sh + PROMOTION

on:
  push:
    branches: ['main']

env:
  IMAGE: ttl.sh/keyed-${{github.sha}}:1h

jobs:
  dev:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/prepare
    - name: build
      run: cosign copy alpine $IMAGE
    - name: dev test
      run: sleep 1
    - name: save digest
      run: echo "DIGEST=$(crane digest $IMAGE)" >> "$GITHUB_ENV"
      shell: sh
    - name: save commit sha for integrity check
      run: echo "COMMIT_SHA=$(git rev-parse HEAD)" >> "$GITHUB_ENV"
      shell: sh
    - name: save porcelain state
      run: echo "PORCELAIN=$([ -z "`git status --porcelain`" ] && echo 0 || echo 1)" >> "$GITHUB_ENV"
      shell: sh
    - name: set shared claims
      shell: sh
      run: echo "CLAIMS=$(-a github.sha=${{github.sha}} -a ref_name=${{github.ref_name}} -a ref_protected=${{github.ref_protected}} -a commit.sha=$COMMIT_SHA)" >> "$GITHUB_ENV"
    - name: promote image to staging
      run: cosign sign --yes --key sigstore/cosign/keys/cosign.key ${CLAIMS} -a porcelain=$PORCELAIN -a promotion=staging $IMAGE@$DIGEST
      env:
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
    - run: crane manifest $(cosign triangulate $IMAGE) | jq .
  staging:
    runs-on: ubuntu-latest
    needs: dev
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/prepare
    - name: save digest
      run: echo "DIGEST=$(crane digest $IMAGE)" >> "$GITHUB_ENV"
      shell: sh
    - name: save commit sha for integrity check
      run: echo "COMMIT_SHA=$(git rev-parse HEAD)" >> "$GITHUB_ENV"
      shell: sh
    - name: save porcelain state
      run: echo "PORCELAIN=$([ -z "`git status --porcelain`" ] && echo 0 || echo 1)" >> "$GITHUB_ENV"
      shell: sh
    - name: set shared claims
      shell: sh
      run: echo "CLAIMS=$(-a github.sha=${{github.sha}} -a ref_name=${{github.ref_name}} -a ref_protected=${{github.ref_protected}} -a commit.sha=$COMMIT_SHA)" >> "$GITHUB_ENV"
    - name: verify image & claims
      run: cosign verify --key sigstore/cosign/keys/cosign.pub ${CLAIMS} -a porcelain=0 -a promotion=staging $IMAGE@$DIGEST
    - name: staging test
      run: sleep 1
    - name: promote image to production
      run: cosign sign --yes --key sigstore/cosign/keys/prod.key ${CLAIMS} -a promotion=production $IMAGE@$DIGEST
      env:
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD_PROD }}
    - run: crane manifest $(cosign triangulate $IMAGE) | jq .
  production:
    needs: staging
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/prepare
    - name: verify image & claims
      run: cosign verify --key sigstore/cosign/keys/prod.pub -a porcelain=0 -a promotion=production $IMAGE@$DIGEST
